@startuml

title WordPress Bootstrap

skinparam title {
  FontColor #263238
}

skinparam class {
  BackgroundColor #ECEFF1-#CFD8DC
  BorderColor #37474F
  ArrowColor #37474F
  FontColor #263238
  FontStyle bold
  FontSize 11
  Attribute {
    FontColor #263238
  }
}

skinparam activity {
  BackgroundColor #ECEFF1-#CFD8DC
  BorderColor #37474F
  ArrowColor #37474F
  StartColor #263238
  EndColor #263238
  BarColor #263238
  FontColor #263238
  FontStyle plain
  FontSize 10
}

skinparam circledCharacter {
  FontColor #263238
  FontSize 10
  FontName Helvetica
  Radius 7
}

skinparam package {
  BackgroundColor #FFFFFF-#ECEFF1
  BorderColor #37474F
  FontColor #263238
}

skinparam note {
  BackgroundColor #FFECB3-#FFE082
  BorderColor #FF6F00
  FontColor #3E2723
  FontSize 11
}

start

partition index.php {
  :define WP_USE_THEMES;
  :require wp-blog-header.php;
}

partition wp-blog-header.php {
  :require wp-load.php;
}

partition wp-load.php {
  :define ABSPATH;
  :error_reporting;
  if (wp-config.php exists?) then (true)
    :require wp-config.php;
  else (false)
    :define WPINC;
    :require WPINC/load.php;
    :wp_fix_server_vars();
    :require WPINC/functions.php;
    if (not running in circles?) then (true)
      :redirect to wp-admin/setup-config.php;
      end
    else (false)
      :wp_check_php_mysql_versions();
      :wp_load_translations_early();
      :show "Need more help?" message;
      end
    endif
  endif
}

partition wp-config.php {
  :define DB_NAME;
  :define DB_USER;
  :define DB_PASSWORD;
  :define DB_HOST;
  :define DB_CHARSET;
  :define DB_COLLATE;
  :define AUTH_KEY;
  :define SECURE_AUTH_KEY;
  :define LOGGED_IN_KEY;
  :define NONCE_KEY;
  :define AUTH_SALT;
  :define SECURE_AUTH_SALT;
  :define LOGGED_IN_SALT;
  :define NONCE_SALT;
  :set $table_prefix;
  if (! defined ABSPATH) then (true)
    :define ABSPATH;
  else (false)
  endif
  :require wp-settings.php;
}

partition wp-settings.php {
  :define WPINC;
  :require WPINC/load.php;
  :require WPINC/default-constants.php;
  :require WPINC/pluginphp;
  :require WPINC/version.php;
}



partition wp-blog-header.php {
  :wp();
  :require WPINC/template-loader.php;
}

partition WPINC/template-loader.php {
  if (WP_USE_THEMES?) then (true)
    :do_action( 'template_redirect' );
  else (false)
  endif
  if (HEAD request AND exit_on_http_head?) then (true)
    end
  else (false)
  endif
  if (is_robots()?) then (true)
    :do_action( 'do_robots' );
    end
  (false) elseif (is_feed()?) then (true)
    :do_feed();
    end
  (false) elseif (is_trackback()?) then (true)
    :include wp-trackback.php;
    end
  else (false)
  endif

	if (WP_USE_THEMES?) then (true)
		if (is_embed()?) then (true)
		(false) elseif (is_404()?) then (true)
		(false) elseif (is_search()?) then (true)
		(false) elseif (is_front_page()?) then (true)
		(false) elseif (is_home()?) then (true)
		(false) elseif (is_post_type_archive()?) then (true)
		(false) elseif (is_tax()?) then (true)
		(false) elseif (is_attachment()?) then (true)
			:remove_filter(the_content, prepend_attachment);
		(false) elseif (is_single()?) then (true)
		(false) elseif (is_page()?) then (true)
		(false) elseif (is_singular()?) then (true)
		(false) elseif (is_category()?) then (true)
		(false) elseif (is_tag()?) then (true)
		(false) elseif (is_author()?) then (true)
		(false) elseif (is_date()?) then (true)
		(false) elseif (is_archive()?) then (true)
		else (false)
			:$template = get_index_template();
		endif
		if ($template = apply_filters(template_include, $template)?) then (true)
			:include $template;
		(false) elseif (current_user_can( 'switch_themes' )?) then (true)
			:$theme = wp_get_theme();
			if ($theme->errors()?) then (true)
				:wp_die($theme->errors());
			else (false)
			endif
		else (false)
		endif
		:return;
	else (false)
	endif

}

stop

@enduml
